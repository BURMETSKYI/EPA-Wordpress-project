name: Deploy TelegramBot EC2

on:
  workflow_call:
  workflow_dispatch:
      
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Validate CloudFormation template
        run: |
          if [ ! -f CloudFormation-bot.yaml ]; then
            echo "Error: CloudFormation-bot.yaml not found!"
            exit 1
          fi
          aws cloudformation validate-template --template-body file://CloudFormation-bot.yaml || {
            echo "Template validation failed!"
            exit 1
          }

      - name: Deploy CloudFormation stack
        run: |
          STACK_NAME="TelegramBot-$(date +'%Y%m%d-%H%M%S')"
          echo "STACK_NAME is: $STACK_NAME"

          INSTANCE_ID=$(aws ec2 describe-addresses --allocation-ids eipalloc-07adc60569a6702fc --query 'Addresses[0].InstanceId' --output text)
          if [ "$INSTANCE_ID" != "None" ]; then
            echo "Terminating instance: $INSTANCE_ID"
            aws ec2 terminate-instances --instance-ids "$INSTANCE_ID" || {
              echo "Failed to terminate instance: $INSTANCE_ID"
              exit 1
            }
          else
            echo "No instance associated with the provided EIP."
          fi

          ASSOCIATION_ID=$(aws ec2 describe-addresses --allocation-ids eipalloc-092e331c98b8b9bfa --query 'Addresses[0].AssociationId' --output text)
          if [ "$ASSOCIATION_ID" != "None" ]; then
            echo "Disassociating Elastic IP..."
            aws ec2 disassociate-address --association-id "$ASSOCIATION_ID" || {
              echo "Failed to disassociate Elastic IP."
              exit 1
            }
          else
            echo "Elastic IP is not associated."
          fi

          echo "Deploying CloudFormation stack..."
          aws cloudformation deploy --template-file ./CloudFormation-bot.yaml --stack-name "$STACK_NAME" \
            --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND || {
            echo "CloudFormation stack deployment failed!"
            exit 1
          }

      - name: Fetch CloudFormation stack events
        if: failure()
        run: aws cloudformation describe-stack-events --stack-name $STACK_NAME
